# [PackageDev] target_format: plist, ext: tmLanguage
---
name: G-code
scopeName: source.iso6983
fileTypes: [eia,nc,ngc,prg,mpf]
uuid: e6875107-21f9-449b-bbae-036db969b3d2

patterns:
- comment: g commands
  name: support.variable
  match: G\d+

- comment: m commands
  name: support.constant
  match: M\d+

- comment: comments
  name: comment.line
  match: \(.*\)

- comment: flow control operators
  name: keyword.control
  match: (IF|THEN|AND|OR|WHILE|GOTO)

- comment: comparison operators
  name: keyword.operator
  match: (GT|LT|GE|LE|EQ)

- comment: flow control operators - locations
  name: markup.italic
  match: (?<=GOTO|DO)\d+

- comment: functions
  name: support.function
  match: (ABS|ACOS|ASIN|ATAN|COS|LN|EXP|FIX|FUP|MOD|ROUND|SQRT|SIN|TAN)

- comment: variables
  name: variable.other
  match: (#\d+)

- comment: O & N numberes
  name: support.function
  match: ([ON]([\d])+)

- comment: Current tool number
  name: support.function
  match: ([T]([\d\.])+)

- comment: Pre-load tool number
  name: support.function
  match: (?<=([T\d\. ]))([T]([\d\.])+)

- comment: positions - alpha component - X
  name: keyword.position.x.identifier
  match: ([X]{1})(?=([\d\.-])*)

- comment: positions - alpha component - Y
  name: keyword.position.y.identifier
  match: ([Y]{1})(?=([\d\.-])*)

- comment: positions - alpha component - Z
  name: keyword.position.z.identifier
  match: ([Z]{1})(?=([\d\.-])*)

- comment: positions - alpha component - I
  name: keyword.position.i.identifier
  match: ([I]{1})(?=([\d\.-])*)

- comment: positions - alpha component - J
  name: keyword.position.j.identifier
  match: ([J]{1})(?=([\d\.-])*)

- comment: positions - alpha component - K
  name: keyword.position.k.identifier
  match: ([K]{1})(?=([\d\.-])*)

- comment: positions - alpha component - A
  name: keyword.position.a.identifier
  match: ([A]{1})(?=([\d\.-])*)

- comment: positions - alpha component - B
  name: keyword.position.b.identifier
  match: ([B]{1})(?=([\d\.-])*)

- comment: positions - alpha component - C
  name: keyword.position.c.identifier
  match: ([C]{1})(?=([\d\.-])*)

- comment: positions - alpha component - U
  name: keyword.position.u.identifier
  match: ([U]{1})(?=([\d\.-])*)

- comment: positions - alpha component - V
  name: keyword.position.v.identifier
  match: ([V]{1})(?=([\d\.-])*)

- comment: positions - alpha component - W
  name: keyword.position.w.identifier
  match: ([W]{1})(?=([\d\.-])*)

- comment: positions - numeric component - X
  name: keyword.position.x.value
  match: (?<=X)([\d\.-])*

- comment: positions - numeric component - Y
  name: keyword.position.y.value
  match: (?<=Y)([\d\.-])*

- comment: positions - numeric component - Z
  name: keyword.position.z.value
  match: (?<=Z)([\d\.-])*

- comment: positions - numeric component - I
  name: keyword.position.i.value
  match: (?<=I)([\d\.-])*

- comment: positions - numeric component - J
  name: keyword.position.j.value
  match: (?<=J)([\d\.-])*

- comment: positions - numeric component - K
  name: keyword.position.k.value
  match: (?<=K)([\d\.-])*

- comment: positions - numeric component - A
  name: keyword.position.a.value
  match: (?<=A)([\d\.-])*

- comment: positions - numeric component - B
  name: keyword.position.b.value
  match: (?<=B)([\d\.-])*

- comment: positions - numeric component - C
  name: keyword.position.c.value
  match: (?<=C)([\d\.-])*

- comment: positions - numeric component - U
  name: keyword.position.u.value
  match: (?<=U)([\d\.-])*

- comment: positions - numeric component - V
  name: keyword.position.v.value
  match: (?<=V)([\d\.-])*

- comment: positions - numeric component - W
  name: keyword.position.w.value
  match: (?<=W)([\d\.-])*

- comment: positions - numeric component
  name: constant.numeric
  match: (?<=[XYZABC])([\d\.-])*

- comment: feeds & speeds
  name: variable.parameter
  match: (?<= )[FS]([\d\.-])+

- comment: brackets
  name: string.interpolated
  match: (\[|\])
...